{"version":3,"sources":["redux/usersSlice.js","styles.js","components/ListItem.jsx","components/EmployeesList.jsx","components/EmployeesBirthday.jsx","App.js","store.js","index.js"],"names":["initialState","reduxState","JSON","parse","localStorage","getItem","users","slice","createSlice","name","reducers","addUsers","state","action","push","payload","deleteUsers","splice","findIndex","item","id","actions","selectUsers","Wrapper","styled","div","Section","section","ListItem","firstName","lastName","dob","activeUsers","useState","select","setSelect","setStyled","dispatch","useDispatch","handleSelectChange","event","value","target","userDob","Date","getDate","toLocaleString","month","getFullYear","className","type","checked","onChange","htmlFor","EmployeesList","setUsers","useSelector","a","axios","get","then","resp","data","sort","b","firstname","reduce","acc","user","letter","catch","error","console","log","getUsers","map","index","hasOwnProperty","key","EmployeesBirthday","getMonth","Global","createGlobalStyle","App","path","store","configureStore","reducer","usersReducer","middleware","getDefaultMiddleware","serializableCheck","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15b6b07e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nlet initialState = [];\n\nconst reduxState = JSON.parse(localStorage.getItem(\"reduxState\"));\n\nif (reduxState) initialState = reduxState.users || initialState;\n\nexport const slice = createSlice({\n  name: \"users\",\n  initialState: initialState,\n  reducers: {\n    addUsers: (state, action) => {\n      state.push({ ...action.payload });\n      return state;\n    },\n    deleteUsers: (state, action) => {\n      state.splice(\n        state.findIndex((item) => item.id === action.payload.id),\n        1\n      );\n      return state;\n    },\n  },\n});\n\nexport const { addUsers, deleteUsers } = slice.actions;\n\nexport const selectUsers = (state) => state.users;\n\nexport default slice.reducer;\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  width: 50%;\r\n  height: 100vh;\r\n  overflow-y: \"scroll\";\r\n  border-right: 1px solid #dbdbdb;\r\n  background-color: #ffffff;\r\n  .section-header {\r\n    padding: 15px;\r\n    border-bottom: 1px solid #dbdbdb;\r\n  }\r\n  .section-content {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n  }\r\n  .letter-card {\r\n    width: 25%;\r\n    padding: 15px;\r\n    text-align: left;\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  form {\r\n    font-size: 12px;\r\n    padding: 5px 10px;\r\n  }\r\n  span {\r\n    font-size: 12px;\r\n  }\r\n  .active {\r\n    color: blue;\r\n  }\r\n  .unactive {\r\n    color: black;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addUsers, deleteUsers} from '../redux/usersSlice';\r\n\r\n\r\nconst ListItem = ({ id, firstName, lastName, dob, activeUsers}) => {\r\n    const [select, setSelect] = useState(\"notActive\");\r\n    const [styled, setStyled] = useState(\"inactive\");\r\n    const dispatch = useDispatch();\r\n\r\n    //Too many re-renders. React limits the number of renders to prevent an infinite loop.\r\n    // if (activeUsers.includes(id)) {\r\n    //     setSelect(\"active\");\r\n    // };\r\n\r\n  const handleSelectChange = event => {\r\n    const value = event.target.value;\r\n      setSelect(value);\r\n      if (value === 'active') {\r\n          setStyled(\"active\");\r\n          const userDob = `${new Date(dob).getDate()} ${ new Date(dob).toLocaleString('en-US', { month: 'long' })}, ${new Date(dob).getFullYear()} year`;\r\n          dispatch(addUsers({\r\n              id,\r\n              firstName,\r\n              lastName,\r\n              dob,\r\n              userDob,\r\n            }));  \r\n      } else {\r\n          setStyled(\"activated\");\r\n          dispatch(deleteUsers({\r\n                id\r\n            }));  \r\n      }\r\n  };\r\n \r\n    return (\r\n        <li>\r\n            <div className={styled}>{firstName} {lastName}</div>\r\n            <form>\r\n                <div>\r\n                    <input type=\"radio\" id=\"сhoice1\" value=\"notActive\" checked={select === \"notActive\"} onChange={event => handleSelectChange(event)} />\r\n                    <label htmlFor =\"сhoice1\">not active</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"сhoice2\" value=\"active\" checked={select === \"active\"} onChange={event => handleSelectChange(event)} />\r\n                    <label htmlFor =\"сhoice2\">active</label>\r\n                </div>   \r\n            </form>\r\n        </li>\r\n   )\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUsers } from '../redux/usersSlice';\r\nimport { Section } from '../styles';\r\nimport ListItem from \"./ListItem\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst EmployeesList = () => {\r\n  const letterList = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n  const [users, setUsers] = useState([]);\r\n  \r\n  const activeUsers= useSelector(selectUsers);\r\n\r\n  async function getUsers() {\r\n    const apiUrl = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n    await axios\r\n      .get(apiUrl)\r\n      .then(resp => {\r\n        const data = resp.data;\r\n        //data.sort((a, b) => a.firstname !== b.firstname ? a.firstname < b.firstname ? -1 : 1 : 0);\r\n        const users = data.sort((a,b) => (a.firstname  - b.firstname)).reduce((acc, user) => {\r\n          const letter = user.firstName[0];\r\n          if (acc[letter]) {\r\n            acc[letter].push(user);\r\n          } else {\r\n            acc[letter] = [user];\r\n          }\r\n          return acc;\r\n        }, {});\r\n        setUsers(users);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getUsers(); \r\n\r\n  return (\r\n    <Section>\r\n      <h1 className=\"section-header\">Employees</h1>\r\n      <div className=\"section-content\">\r\n      {letterList.map((letter, index) =>\r\n        users.hasOwnProperty(letter) ? (\r\n          <div key={index} className=\"letter-card\">\r\n            <h2>{letter}</h2>\r\n            <ul>\r\n              {users[letter].map(user => (\r\n                <ListItem {...user} key={user.id} activeUsers={ activeUsers}/>))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n            <div key={index} className=\"letter-card\">\r\n              <h2>{letter}</h2>\r\n              <p> No Employees</p>\r\n            </div>))}\r\n      </div>\r\n    </Section>\r\n   )\r\n}\r\n\r\nexport default EmployeesList;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUsers } from '../redux/usersSlice';\r\nimport { Section} from '../styles';\r\n\r\n\r\nconst EmployeesBirthday = () => {\r\n\r\n  const activeUsers = useSelector(selectUsers);\r\n  console.log(activeUsers);\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  \r\n  const users = activeUsers.reduce((acc, user) => {\r\n    const month = new Date(user.dob).getMonth();\r\n    if (acc[month]) {\r\n      acc[month].push(user);\r\n    } else {\r\n      acc[month] = [user];\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <Section>\r\n      <h1 className=\"section-header\">Employees birthday</h1>\r\n      <div className=\"section-content\">\r\n        {months.map((month, index) =>\r\n          users.hasOwnProperty(index) ? (\r\n            <div key={index} className=\"letter-card\">\r\n              <h2>{month}</h2>\r\n              <ul>\r\n                {users[index].map(user =>   \r\n                (<li {...user} key={user.id}>\r\n                    <p>{user.firstName} {user.lastName} -<span>{user.userDob}</span></p>\r\n                  </li>))}\r\n              </ul>\r\n            </div>\r\n          ) : (\r\n              <div key={index} className=\"letter-card\">\r\n                <h2>{month}</h2>\r\n                <p> No Employees</p>\r\n              </div>))}\r\n      </div>\r\n    </Section>\r\n   )\r\n}\r\n\r\nexport default EmployeesBirthday;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport \"./App.css\";\nimport { Route, HashRouter as Router } from \"react-router-dom\";\nimport EmployeesList from \"./components/EmployeesList\";\nimport EmployeesBirthday from \"./components/EmployeesBirthday\";\nimport { Wrapper } from \"./styles\";\n\nconst Global = createGlobalStyle`\n  *, *::before, *::after{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  body{\n    font-family: sans-serif;\n  }\n  a{\n    text-decoration:none;\n  }\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Global />\n      <Router>\n        <Route path=\"/employees\">\n          <Wrapper>\n            <EmployeesList />\n            <EmployeesBirthday />\n          </Wrapper>\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersReducer from \"./redux/usersSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    users: usersReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}