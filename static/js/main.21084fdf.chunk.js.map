{"version":3,"sources":["redux/activeUsersSlice.js","styles.js","components/ListItem.jsx","components/EmployeesList.jsx","components/EmployeesBirthday.jsx","App.js","store.js","index.js"],"names":["initialState","reduxState","JSON","parse","localStorage","getItem","activeUsers","slice","createSlice","name","reducers","addActiveUsers","state","action","push","payload","deleteActiveUsers","splice","findIndex","item","id","actions","selectActiveUsers","Wrapper","styled","div","Section","section","ListItem","firstName","lastName","dob","dispatch","useDispatch","isActive","includes","handleChange","event","statusValue","target","value","userDob","Date","getDate","toLocaleString","month","getFullYear","className","type","checked","onChange","htmlFor","EmployeesList","useState","users","setUsers","useSelector","map","user","a","axios","get","then","resp","data","sort","b","localeCompare","reduce","acc","letter","catch","error","console","log","getUsers","index","hasOwnProperty","key","EmployeesBirthday","months","startMonth","getMonth","actualMonthArray","length","Global","createGlobalStyle","App","path","store","configureStore","reducer","activeUsersReducer","middleware","getDefaultMiddleware","serializableCheck","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21084fdf.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nlet initialState = [];\n\nconst reduxState = JSON.parse(localStorage.getItem(\"reduxState\"));\n\nif (reduxState) initialState = reduxState.activeUsers || initialState;\n\nexport const slice = createSlice({\n  name: \"activeUsers\",\n  initialState: initialState,\n  reducers: {\n    addActiveUsers: (state, action) => {\n      state.push({ ...action.payload });\n      return state;\n    },\n    deleteActiveUsers: (state, action) => {\n      state.splice(\n        state.findIndex((item) => item.id === action.payload.id),\n        1\n      );\n      return state;\n    },\n  },\n});\n\nexport const { addActiveUsers, deleteActiveUsers } = slice.actions;\n\nexport const selectActiveUsers = (state) => state.activeUsers;\n\nexport default slice.reducer;\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  width: 50%;\r\n  height: 100vh;\r\n  border-right: 1px solid #dbdbdb;\r\n  background-color: #ffffff;\r\n  .section-header {\r\n    padding: 15px;\r\n    border-bottom: 1px solid #dbdbdb;\r\n  }\r\n  .section-content {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n  }\r\n  .letter-card {\r\n    width: 33%;\r\n    padding: 15px;\r\n    text-align: left;\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n    @media (min-width: 767px) and (max-width: 1023px) {\r\n      width: 50%;\r\n    }\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  li {\r\n    padding: 5px 0;\r\n  }\r\n  label {\r\n    font-size: 12px;\r\n    padding: 5px 10px;\r\n  }\r\n  .empty-message {\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n  span {\r\n    font-size: 12px;\r\n  }\r\n  .active {\r\n    color: blue;\r\n  }\r\n  .unactive {\r\n    color: black;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addActiveUsers, deleteActiveUsers } from '../redux/activeUsersSlice';\r\n\r\n\r\nconst ListItem = ({ id, firstName, lastName, dob, activeUsers }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isActive = activeUsers.includes(id);\r\n\r\n    const handleChange = event => {\r\n        const statusValue = event.target.value === 'active' ? true : false;\r\n        const userDob = `${new Date(dob).getDate()} ${ new Date(dob).toLocaleString('en-US', { month: 'long' })}, ${new Date(dob).getFullYear()} year`;\r\n        statusValue ? dispatch(addActiveUsers({\r\n            id,\r\n            firstName,\r\n            lastName,\r\n            dob,\r\n            userDob,\r\n        }))\r\n        : dispatch(deleteActiveUsers(id));\r\n    };\r\n\r\n    return (\r\n        <li>\r\n            <div className = {isActive ? \"active\" : \"unactive\"}>{firstName} {lastName}</div>\r\n            <form>\r\n                <div>\r\n                    <input type=\"radio\" id=\"сhoice1\" value=\"unactive\" checked={!isActive} onChange={handleChange} />\r\n                    <label htmlFor =\"сhoice1\">not active</label>\r\n                </div>\r\n                <div>\r\n                    <input type=\"radio\" id=\"сhoice2\" value=\"active\" checked={isActive} onChange={handleChange}/>\r\n                    <label htmlFor =\"сhoice2\">active</label>\r\n                </div>   \r\n            </form>\r\n        </li>\r\n   )\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectActiveUsers } from '../redux/activeUsersSlice';\r\nimport { Section } from '../styles';\r\nimport ListItem from \"./ListItem\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst EmployeesList = () => {\r\n  const letterList = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n  const [users, setUsers] = useState([]);\r\n  const activeUsers = useSelector(selectActiveUsers).map(user => user.id);\r\n  \r\n\r\n  async function getUsers() {\r\n    const apiUrl = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n    await axios\r\n      .get(apiUrl)\r\n      .then(resp => {\r\n        const data = resp.data;\r\n        const users = data.sort((a, b) => a.firstName.localeCompare(b.firstName),).reduce((acc, user) => {\r\n          const letter = user.firstName[0];\r\n          if (acc[letter]) {\r\n            acc[letter].push(user);\r\n          } else {\r\n            acc[letter] = [user];\r\n          }\r\n          return acc;\r\n        }, {});\r\n        setUsers(users);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  getUsers(); \r\n\r\n  return (\r\n    <Section>\r\n      <h1 className=\"section-header\">Employees</h1>\r\n      <div className=\"section-content\">\r\n      {letterList.map((letter, index) =>\r\n        users.hasOwnProperty(letter) ? (\r\n          <div key={index} className=\"letter-card\">\r\n            <h2>{letter}</h2>\r\n            <ul>\r\n              {users[letter].map(user => (\r\n                <ListItem {...user} key={user.id} activeUsers={ activeUsers}/>))}\r\n            </ul>\r\n          </div>\r\n        ) : (\r\n            <div key={index} className=\"letter-card\">\r\n              <h2>{letter}</h2>\r\n              <p> No Employees</p>\r\n            </div>))}\r\n      </div>\r\n    </Section>\r\n   )\r\n}\r\n\r\nexport default EmployeesList;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectActiveUsers } from '../redux/activeUsersSlice';\r\nimport { Section} from '../styles';\r\n\r\n\r\nconst EmployeesBirthday = () => {\r\n\r\n  const activeUsers = [...useSelector(selectActiveUsers)].sort((a, b) =>\r\n      a.lastName.localeCompare(b.lastName),\r\n  );\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const startMonth = new Date().getMonth();\r\n  const actualMonthArray =[ ...[...months].splice(startMonth, (months.length - startMonth)), ...[...months].splice(0, startMonth)];\r\n\r\n  const users = activeUsers.reduce((acc, user) => {\r\n    const month = new Date(user.dob).toLocaleString('en-US', { month: 'long' });\r\n    if (acc[month]) {\r\n      acc[month].push(user);\r\n    } else {\r\n      acc[month] = [user];\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <Section>\r\n      <h1 className=\"section-header\">Employees birthday</h1>\r\n      {!activeUsers.length ? (<h4 className =\"empty-message\"> Employees List is empty</h4>): (\r\n      <div className=\"section-content\">\r\n        {\r\n            actualMonthArray.map((month, index) =>\r\n              users.hasOwnProperty(month) ? (\r\n                <div key={index} className=\"letter-card\">\r\n                  <h2>{month}</h2>\r\n                  <ul>\r\n                    {users[month].map(user =>\r\n                    (<li key={user.id}>\r\n                      <p>{user.firstName} {user.lastName} - <span>{user.userDob}</span></p>\r\n                    </li>))}\r\n                  </ul>\r\n                </div>\r\n              ) : (\r\n                <div key={index} className=\"letter-card\">\r\n                  <h2>{month}</h2>\r\n                  <p> No Employees</p>\r\n                </div>))\r\n          }\r\n        </div>\r\n        )}\r\n    </Section>\r\n   )\r\n}\r\n\r\nexport default EmployeesBirthday;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport \"./App.css\";\nimport { Route, HashRouter as Router } from \"react-router-dom\";\nimport EmployeesList from \"./components/EmployeesList\";\nimport EmployeesBirthday from \"./components/EmployeesBirthday\";\nimport { Wrapper } from \"./styles\";\n\nconst Global = createGlobalStyle`\n  *, *::before, *::after{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  body{\n    font-family: sans-serif;\n  }\n  a{\n    text-decoration:none;\n  }\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Global />\n      <Router>\n        <Route path=\"/employees\">\n          <Wrapper>\n            <EmployeesList />\n            <EmployeesBirthday />\n          </Wrapper>\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport activeUsersReducer from \"./redux/activeUsersSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    activeUsers: activeUsersReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}