{"version":3,"sources":["redux/activeUsersSlice.js","redux/usersSlice.js","styles.js","components/Employee.jsx","components/EmployeesList.jsx","components/EmployeesBirthday.jsx","App.js","services/usersApi.js","store.js","index.js"],"names":["initialState","reduxState","JSON","parse","localStorage","getItem","activeUsers","slice","createSlice","name","reducers","addActiveUsers","state","action","push","payload","deleteActiveUsers","splice","findIndex","item","id","actions","selectActiveUsers","setUsers","selectUsers","users","Wrapper","styled","div","Section","section","Employee","firstName","lastName","dob","dispatch","useDispatch","isActive","includes","handleChange","event","statusValue","target","value","userDob","Date","getDate","toLocaleString","month","getFullYear","className","type","checked","onChange","htmlFor","defaultProps","EmployeesList","useSelector","usersList","sort","a","b","localeCompare","reduce","acc","user","letter","map","index","hasOwnProperty","key","EmployeesBirthday","months","startMonth","getMonth","actualMonthArray","length","Global","createGlobalStyle","App","axios","get","then","resp","data","catch","error","console","log","path","store","configureStore","reducer","usersReducer","activeUsersReducer","middleware","getDefaultMiddleware","serializableCheck","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"kPAEIA,EAAe,GAEbC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,eAE/CJ,IAAYD,EAAeC,EAAWK,aAAeN,GAElD,I,IAAMO,EAAQC,YAAY,CAC/BC,KAAM,cACNT,aAAcA,EACdU,SAAU,CACRC,eAAgB,SAACC,EAAOC,GAEtB,OADAD,EAAME,KAAN,eAAgBD,EAAOE,UAChBH,GAETI,kBAAmB,SAACJ,EAAOC,GAKzB,OAJAD,EAAMK,OACJL,EAAMM,WAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOP,EAAOE,QAAQK,MACnD,GAEKR,MAKN,EAA8CL,EAAMc,QAA5CV,EAAR,EAAQA,eAAgBK,EAAxB,EAAwBA,kBAElBM,EAAoB,SAAAV,GAAK,OAAIA,EAAMN,aAEjCC,IAAf,QC1BaA,EAAQC,YAAY,CAC/BC,KAAM,QACNT,aAJiB,GAKjBU,SAAU,CACRa,SAAU,SAACX,EAAOC,GAEhB,OADAD,EAAME,KAAN,eAAgBD,EAAOE,UAChBH,MAKEW,EAAahB,EAAMc,QAAnBE,SAEFC,EAAc,SAACZ,GAAD,OAAWA,EAAMa,OAE7BlB,IAAf,QCjBamB,EAAUC,IAAOC,IAAV,8HAOPC,EAAUF,IAAOG,QAAV,49B,OCJdC,EAAW,SAAC,GAAmD,IAAjDX,EAAgD,EAAhDA,GAAIY,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,IAAK5B,EAAkB,EAAlBA,YAC1C6B,EAAWC,cACXC,EAAW/B,EAAYgC,SAASlB,GAEhCmB,EAAe,SAAAC,GACnB,IAAMC,EAAqC,WAAvBD,EAAME,OAAOC,MAC3BC,EAAO,UAAM,IAAIC,KAAKX,GAAKY,UAApB,YAAiC,IAAID,KAAKX,GAAKa,eAC1D,QACA,CAAEC,MAAO,SAFE,aAGP,IAAIH,KAAKX,GAAKe,cAHP,SAKTd,EADJM,EAEM9B,EAAe,CACbS,KACAY,YACAC,WACAC,MACAU,YAGK5B,EAAkBI,KAGjC,OACE,+BACE,oBAAG8B,UAAWb,EAAW,SAAW,WAApC,UACGL,EADH,IACeC,KAEf,iCACE,gCACE,uBACEkB,KAAK,QACL/B,GAAG,eACHuB,MAAM,WACNS,SAAUf,EACVgB,SAAUd,IAEZ,uBAAOe,QAAQ,eAAf,2BAEF,gCACE,uBACEH,KAAK,QACL/B,GAAG,eACHuB,MAAM,SACNS,QAASf,EACTgB,SAAUd,IAEZ,uBAAOe,QAAQ,eAAf,8BAOKvB,IAEfA,EAASwB,aAAe,CACtBnC,GAAI,GACJY,UAAW,GACXC,SAAU,GACVC,IAAK,GACL5B,YAAa,IC3Df,I,EAqEekD,EArEO,WACpB,IA4BM/B,EAAQgC,YAAYjC,GACpBkC,EAAY,YAAIjC,GACnBkC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE5B,UAAU8B,cAAcD,EAAE7B,cAC3C+B,QAAO,SAACC,EAAKC,GACZ,IAAMC,EAASD,EAAKjC,UAAU,GAM9B,OALIgC,EAAIE,GACNF,EAAIE,GAAQpD,KAAKmD,GAEjBD,EAAIE,GAAU,CAACD,GAEVD,IACN,IACC1D,EAAcmD,YAAYnC,GAAmB6C,KAAI,SAAAF,GAAI,OAAIA,EAAK7C,MAEpE,OACE,eAACS,EAAD,WACE,oBAAIqB,UAAU,iBAAd,uBACA,qBAAKA,UAAU,kBAAf,SA7Ce,CACjB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAoBgBiB,KAAI,SAACD,EAAQE,GAAT,OACdV,EAAUW,eAAeH,GACvB,sBAAiBhB,UAAU,cAA3B,UACE,6BAAKgB,IACL,6BACGR,EAAUQ,GAAQC,KAAI,SAAAF,GAAI,OACzB,wBAAC,EAAD,2BAAcA,GAAd,IAAoBK,IAAKL,EAAK7C,GAAId,YAAaA,YAJ3C8D,GASV,sBAAiBlB,UAAU,cAA3B,UACE,6BAAKgB,IACL,gDAFQE,YCSPG,EArEW,WACxB,IAAMjE,EAAc,YAAImD,YAAYnC,IAAoBqC,MAAK,SAACC,EAAGC,GAAJ,OAC3DD,EAAE3B,SAAS6B,cAAcD,EAAE5B,aAEvBuC,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEIC,GAAa,IAAI5B,MAAO6B,WACxBC,EAAgB,sBACjB,UAAIH,GAAQvD,OAAOwD,EAAYD,EAAOI,OAASH,IAD9B,YAEjB,UAAID,GAAQvD,OAAO,EAAGwD,KAGrBhD,EAAQnB,EAAYyD,QAAO,SAACC,EAAKC,GACrC,IAAMjB,EAAQ,IAAIH,KAAKoB,EAAK/B,KAAKa,eAAe,QAAS,CAAEC,MAAO,SAMlE,OALIgB,EAAIhB,GACNgB,EAAIhB,GAAOlC,KAAKmD,GAEhBD,EAAIhB,GAAS,CAACiB,GAETD,IACN,IAEH,OACE,eAACnC,EAAD,WACE,oBAAIqB,UAAU,iBAAd,gCACE5C,EAAYsE,OAGZ,qBAAK1B,UAAU,kBAAf,SACGyB,EAAiBR,KAAI,SAACnB,EAAOoB,GAAR,OACpB3C,EAAM4C,eAAerB,GACnB,sBAAiBE,UAAU,cAA3B,UACE,6BAAKF,IACL,6BACGvB,EAAMuB,GAAOmB,KAAI,SAAAF,GAAI,OACpB,6BACE,8BACGA,EAAKjC,UADR,IACoBiC,EAAKhC,SADzB,KACqC,IACnC,+BAAOgC,EAAKrB,cAHPqB,EAAK7C,WAJVgD,GAcV,sBAAiBlB,UAAU,cAA3B,UACE,6BAAKF,IACL,gDAFQoB,QAnBhB,mBAAGlB,UAAU,gBAAb,0C,iBClCF2B,EAASC,YAAH,4MAoCGC,MAtBf,WACE,IAAM5C,EAAWC,cAMjB,OCzBO4C,IACJC,IAJU,kEAKVC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,QAClBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,MDiBLJ,MAAK,SAAAE,GACdA,EAAKjB,KAAI,SAAAF,GAAI,OAAI9B,EAASZ,EAAS0C,UAInC,sBAAKf,UAAU,MAAf,UACE,cAAC2B,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOY,KAAK,aAAZ,SACE,eAAC/D,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,eEjCNgE,EAAQC,YAAe,CAC3BC,QAAS,CACPnE,MAAOoE,EACPvF,YAAawF,GAEfC,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,mBAAmB,OAIzBP,EAAMQ,WAAU,WACd9F,aAAa+F,QAAQ,aAAcjG,KAAKkG,UAAUV,EAAMW,gBAG3CX,QCZfY,IAASC,OACP,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFc,SAASC,eAAe,W","file":"static/js/main.81a7cd66.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nlet initialState = [];\n\nconst reduxState = JSON.parse(localStorage.getItem('reduxState'));\n\nif (reduxState) initialState = reduxState.activeUsers || initialState;\n\nexport const slice = createSlice({\n  name: 'activeUsers',\n  initialState: initialState,\n  reducers: {\n    addActiveUsers: (state, action) => {\n      state.push({ ...action.payload });\n      return state;\n    },\n    deleteActiveUsers: (state, action) => {\n      state.splice(\n        state.findIndex(item => item.id === action.payload.id),\n        1,\n      );\n      return state;\n    },\n  },\n});\n\nexport const { addActiveUsers, deleteActiveUsers } = slice.actions;\n\nexport const selectActiveUsers = state => state.activeUsers;\n\nexport default slice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet initialState = [];\r\n\r\nexport const slice = createSlice({\r\n  name: \"users\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    setUsers: (state, action) => {\r\n      state.push({ ...action.payload });\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUsers } = slice.actions;\r\n\r\nexport const selectUsers = (state) => state.users;\r\n\r\nexport default slice.reducer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  width: 50%;\r\n  border-right: 1px solid #dbdbdb;\r\n  background-color: #ffffff;\r\n  .section-header {\r\n    padding: 15px;\r\n    text-align: center;\r\n    border-bottom: 1px solid #dbdbdb;\r\n    @media (max-width: 515px) {\r\n      min-height: 90px;\r\n    }\r\n  }\r\n  .section-content {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n  }\r\n  .letter-card {\r\n    width: 33%;\r\n    padding: 10px 20px;\r\n    text-align: left;\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n    @media (min-width: 767px) and (max-width: 1023px) {\r\n      width: 50%;\r\n    }\r\n  }\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  li {\r\n    padding: 5px 0;\r\n  }\r\n  label {\r\n    font-size: 12px;\r\n    padding: 5px 10px;\r\n  }\r\n  .empty-message {\r\n    padding: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n  }\r\n  span {\r\n    font-size: 12px;\r\n  }\r\n  .active {\r\n    color: blue;\r\n  }\r\n  .unactive {\r\n    color: black;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addActiveUsers, deleteActiveUsers } from '../redux/activeUsersSlice';\r\n\r\nconst Employee = ({ id, firstName, lastName, dob, activeUsers }) => {\r\n  const dispatch = useDispatch();\r\n  const isActive = activeUsers.includes(id);\r\n\r\n  const handleChange = event => {\r\n    const statusValue = event.target.value === 'active' ? true : false;\r\n    const userDob = `${new Date(dob).getDate()} ${new Date(dob).toLocaleString(\r\n      'en-US',\r\n      { month: 'long' },\r\n    )}, ${new Date(dob).getFullYear()} year`;\r\n    statusValue\r\n      ? dispatch(\r\n          addActiveUsers({\r\n            id,\r\n            firstName,\r\n            lastName,\r\n            dob,\r\n            userDob,\r\n          }),\r\n        )\r\n      : dispatch(deleteActiveUsers(id));\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <p className={isActive ? 'active' : 'unactive'}>\r\n        {firstName} {lastName}\r\n      </p>\r\n      <form>\r\n        <div>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"сhoice1\"\r\n            value=\"unactive\"\r\n            checked={!isActive}\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor=\"сhoice1\">not active</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"radio\"\r\n            id=\"сhoice2\"\r\n            value=\"active\"\r\n            checked={isActive}\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor=\"сhoice2\">active</label>\r\n        </div>\r\n      </form>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n\r\nEmployee.defaultProps = {\r\n  id: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  dob: '',\r\n  activeUsers: [],\r\n};\r\n\r\nEmployee.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  firstName: PropTypes.string.isRequired,\r\n  lastName: PropTypes.string.isRequired,\r\n  dob: PropTypes.string.isRequired,\r\n  activeUsers: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectActiveUsers } from '../redux/activeUsersSlice';\r\nimport { selectUsers } from '../redux/usersSlice';\r\nimport { Section } from '../styles';\r\nimport Employee from './Employee';\r\n\r\nconst EmployeesList = () => {\r\n  const letterList = [\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F',\r\n    'G',\r\n    'H',\r\n    'I',\r\n    'J',\r\n    'K',\r\n    'L',\r\n    'M',\r\n    'N',\r\n    'O',\r\n    'P',\r\n    'Q',\r\n    'R',\r\n    'S',\r\n    'T',\r\n    'U',\r\n    'V',\r\n    'W',\r\n    'X',\r\n    'Y',\r\n    'Z',\r\n  ];\r\n  const users = useSelector(selectUsers);\r\n  const usersList = [...users]\r\n    .sort((a, b) => a.firstName.localeCompare(b.firstName))\r\n    .reduce((acc, user) => {\r\n      const letter = user.firstName[0];\r\n      if (acc[letter]) {\r\n        acc[letter].push(user);\r\n      } else {\r\n        acc[letter] = [user];\r\n      }\r\n      return acc;\r\n    }, {});\r\n  const activeUsers = useSelector(selectActiveUsers).map(user => user.id);\r\n\r\n  return (\r\n    <Section>\r\n      <h2 className=\"section-header\">Employees</h2>\r\n      <div className=\"section-content\">\r\n        {letterList.map((letter, index) =>\r\n          usersList.hasOwnProperty(letter) ? (\r\n            <div key={index} className=\"letter-card\">\r\n              <h3>{letter}</h3>\r\n              <ul>\r\n                {usersList[letter].map(user => (\r\n                  <Employee {...user} key={user.id} activeUsers={activeUsers} />\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ) : (\r\n            <div key={index} className=\"letter-card\">\r\n              <h3>{letter}</h3>\r\n              <p> No Employees</p>\r\n            </div>\r\n          ),\r\n        )}\r\n      </div>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default EmployeesList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectActiveUsers } from '../redux/activeUsersSlice';\r\nimport { Section } from '../styles';\r\n\r\nconst EmployeesBirthday = () => {\r\n  const activeUsers = [...useSelector(selectActiveUsers)].sort((a, b) =>\r\n    a.lastName.localeCompare(b.lastName),\r\n  );\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const startMonth = new Date().getMonth();\r\n  const actualMonthArray = [\r\n    ...[...months].splice(startMonth, months.length - startMonth),\r\n    ...[...months].splice(0, startMonth),\r\n  ];\r\n\r\n  const users = activeUsers.reduce((acc, user) => {\r\n    const month = new Date(user.dob).toLocaleString('en-US', { month: 'long' });\r\n    if (acc[month]) {\r\n      acc[month].push(user);\r\n    } else {\r\n      acc[month] = [user];\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <Section>\r\n      <h1 className=\"section-header\">Employees birthday</h1>\r\n      {!activeUsers.length ? (\r\n        <p className=\"empty-message\"> Employees List is empty</p>\r\n      ) : (\r\n        <div className=\"section-content\">\r\n          {actualMonthArray.map((month, index) =>\r\n            users.hasOwnProperty(month) ? (\r\n              <div key={index} className=\"letter-card\">\r\n                <h2>{month}</h2>\r\n                <ul>\r\n                  {users[month].map(user => (\r\n                    <li key={user.id}>\r\n                      <p>\r\n                        {user.firstName} {user.lastName} -{' '}\r\n                        <span>{user.userDob}</span>\r\n                      </p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              <div key={index} className=\"letter-card\">\r\n                <h2>{month}</h2>\r\n                <p> No Employees</p>\r\n              </div>\r\n            ),\r\n          )}\r\n        </div>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default EmployeesBirthday;\r\n","import { createGlobalStyle } from 'styled-components';\nimport { Route, HashRouter as Router } from 'react-router-dom';\nimport EmployeesList from './components/EmployeesList';\nimport EmployeesBirthday from './components/EmployeesBirthday';\nimport { Wrapper } from './styles';\nimport { useDispatch } from 'react-redux';\nimport { setUsers } from './redux/usersSlice';\nimport { getUsers } from './services/usersApi.js';\n\nconst Global = createGlobalStyle`\n  *, *::before, *::after{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  body{\n    font-family: sans-serif;\n  }\n  a{\n    text-decoration:none;\n  }\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  getUsers().then(data => {\n    data.map(user => dispatch(setUsers(user)));\n  });\n\n  return (\n    <div className=\"App\">\n      <Global />\n      <Router>\n        <Route path=\"/employees\">\n          <Wrapper>\n            <EmployeesList />\n            <EmployeesBirthday />\n          </Wrapper>\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\n\r\nconst apiUrl = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n\r\nexport const getUsers = () => {\r\n  return axios\r\n    .get(apiUrl)\r\n    .then(resp => resp.data)\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport activeUsersReducer from './redux/activeUsersSlice';\r\nimport usersReducer from './redux/usersSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    users: usersReducer,\r\n    activeUsers: activeUsersReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}